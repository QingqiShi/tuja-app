name: Master Build

on:
  push:
    branches: [master]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: '12.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: dorny/paths-filter@v2.9.2
        id: changes
        with:
          filters: |
            hosting:
              - 'packages/app/**'
              - 'packages/components/**'
            functions:
              - 'packages/functions/**'
            firestore:
              - 'firestore*'
            workers:
              - 'packages/workers/**'
            root:
              - 'package.json'
              - 'firebase.json'
              - '.firebaserc'
      - run: yarn install
      - run: yarn build
      - run: yarn test:ci
        env:
          CI: true
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: './packages/app/build/js'
      - name: Deploy to Firebase Hosting
        if: steps.changes.outputs.hosting == 'true' || steps.changes.outputs.root == 'true'
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deploy to Firebase Functions
        if: steps.changes.outputs.functions == 'true' || steps.changes.outputs.root == 'true'
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deploy to Firebase Firestore
        if: steps.changes.outputs.firestore == 'true' || steps.changes.outputs.root == 'true'
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only firestore
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deploy to Cloudflare Workers
        if: steps.changes.outputs.workers == 'true' || steps.changes.outputs.root == 'true'
        uses: cloudflare/wrangler-action@1.3.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: 'production'
          workingDirectory: 'packages/workers'
          secrets: |
            EOD_API_KEY
        env:
          EOD_API_KEY: ${{ secrets.EOD_API_KEY }}
